{% macro top() %}
    <a href="#top" class="top">
        <span class="glyphicon glyphicon-chevron-up"></span>
        Back to Top
    </a>
{% endmacro %}
{% extends "layout.html.twig" %}
{% block content %}
    <div id="help-page" class="col-lg-10 col-md-10">
        <h1>Scripting</h1>
        <p>
            The site supports user scripting, which allows you to inject your own Javascript into <i>your</i>
            browser when you are inside of a channel. In addition, a light-weight API is provided so that
            you may build "bots" with user scripts.
        </p>
        <p>
            User scripts are created from the Options -> Scripting dialog. Your script are executed after clicking
            save, and when you enter the channel. You can put all of your code into the "Default" text box, or you
            can organize your scripts in multiple files. Which are shown as multiple tabs in on the scripting
            dialog.
        </p>
        <p>
            <img src="/img/help/scripting/nav_options.png" style="margin-bottom: 10px;width:100%" />
            <img src="/img/help/scripting/user_options.png" style="width:100%" />
        </p>
        
        <h3 id="top">Table of Contents</h3>
        <ul class="list-style-type-none">
            <li>
                <a href="#topic-overview-api">API</a>
            </li>
            <li>
                <a href="#topic-api-events">Events</a>
                <ul>
                    <li><a href="#topic-api-events-loaded">loaded</a></li>
                    <li><a href="#topic-api-events-reloaded">reloaded</a></li>
                    <li><a href="#topic-api-events-receive">receive</a></li>
                    <li><a href="#topic-api-events-send">send</a></li>
                    <li><a href="#topic-api-events-notice">notice</a></li>
                    <li><a href="#topic-api-events-user-join">user_join</a></li>
                    <li><a href="#topic-api-events-user-leave">user_leave</a></li>
                    <li><a href="#topic-api-events-playlist">playlist</a></li>
                    <li><a href="#topic-api-events-queue">queue</a></li>
                    <li><a href="#topic-api-events-media-change">media_change</a></li>
                    <li><a href="#topic-api-events-media-update">media_update</a></li>
                    <li><a href="#topic-api-events-favorites">favorites</a></li>
                    <li><a href="#topic-api-events-favorite-add">favorite_add</a></li>
                    <li><a href="#topic-api-events-tags">tags</a></li>
                    <li><a href="#topic-api-events-votes">votes</a></li>
                    <li><a href="#topic-api-events-vote-value">vote_value</a></li>
                    <li><a href="#topic-api-events-emotes">emotes</a></li>
                    <li><a href="#topic-api-events-afk">afk</a></li>
                    <li><a href="#topic-api-events-profile-menu">profile_menu</a></li>
                    <li><a href="#topic-api-events-user-options-save">user_options_save</a></li>
                    <li><a href="#topic-api-events-channel-option-save">channel_option_save</a></li>
                    <li><a href="#topic-api-events-search-results">search_results</a></li>
                    <li><a href="#topic-api-events-color-change">color_change</a></li>
                </ul>
            </li>
            <li>
                <a href="#topic-api-methods">Methods</a>
                <ul>
                    <li><a href="#topic-api-methods-send">$api.send()</a></li>
                    <li><a href="#topic-api-methods-queue">$api.queue()</a></li>
                    <li><a href="#topic-api-methods-skip">$api.skip()</a></li>
                    <li><a href="#topic-api-methods-vote">$api.vote()</a></li>
                    <li><a href="#topic-api-methods-playlist-clear">$api.playlistClear()</a></li>
                    <li><a href="#topic-api-methods-playlist-shuffle">$api.playlistShuffle()</a></li>
                    <li><a href="#topic-api-methods-search">$api.search()</a></li>
                    <li><a href="#topic-api-methods-clear">$api.clear()</a></li>
                    <li><a href="#topic-api-methods-color">$api.color()</a></li>
                </ul>
            </li>
            <li>
                <a href="#topic-examples">Examples</a>
                <ul>
                    <li><a href="#topic-api-examples-favorites">Queuing Favorites</a></li>
                </ul>
            </li>
        </ul>

        <h3 id="topic-overview-api">API</h3>
        <section>
            <p>
                User scripts get embedded into the page using using regular <code>&ltscript&gt;</code> tags, and
                four convenience variables are created.
            </p>
            <ul style="margin:0;padding:0;list-style-type:none;">
                <li>
                    <code class="signature">$api</code>
                    Provides an interface to the chat software.
                </li>
                <li>
                    <code class="signature">$channel</code>
                    An object containing information about the channel you are in. The object contains several properties.
                    <pre style="margin-top: 12px;">
                        <code class="language-javascript">
                        {
                            bio: String,            // The channel bio/information.
                            css: String,            // The channel CSS.
                            js: String,             // The channel Javascript.
                            emotes: Array,          // An array of channel emotes.
                            motd: String,           // The channel message of the day.
                            name: String,           // The name of the channel.
                            usercount: Number       // The number of users in the channel.
                        }
                        </code>
                    </pre>
                </li>
                <li>
                    <code class="signature">$user</code>
                    An object containing information about you. The object contains several properties.
                    <pre style="margin-top: 12px;">
                        <code class="language-javascript">
                        {
                            emotes: Array,          // An array of your personal emotes.
                            name: String,           // Your username.
                            profile: Object,        // Your profile information.
                            rank: Number            // Your channel rank.
                        }
                        </code>
                    </pre>
                </li>
                <li>
                    <code class="signature">$socket</code>
                    Raw socket used to commentate with the server. Only required for advanced scripting, and not covered
                    in this documentation. See the <a href="http://socket.io/" target="_blank">socket.io documentation</a>
                    for more information on emitting events to the server, and receiving events.
                </li>
            </ul>

            <h5>First Script</h5>
            <p>
                From the site navigation menu click on Options and then Scripting. In the default text box,
                type (or paste) this code and click save.
            </p>
            <pre>
                <code class="language-javascript line-numbers">
                    alert("Your username is " + $user.name + " and you are in the channel " + $channel.name);
                </code>
            </pre>
            
            {{ top() }}
        </section>

        <h3 id="topic-api-events">Events</h3>
        <section>
            <p>
                Interacting with the channel is mostly done through the use of event callbacks. The following code
                demonstrates the use of callbacks to CAPITALIZE every message you send. Callbacks are registered
                with events using the <code>$api.on()</code> method, which takes two arguments: the name of the
                event, and the callback function. The function will be called when an event with the given name
                is triggered.
            </p>
            <pre>
                <code class="language-javascript line-numbers">
                    // Registers a callback which filters every message you send _before_ it gets sent
                    // to the server, and subsequently broadcast to each user in the channel.
                    $api.on("send", function(e, data) {
                        // Every message you send will be automatically capitalized.
                        data.msg = data.msg.toUpperCase();
                    });
                </code>
            </pre>
            <pre>
                <code class="language-javascript line-numbers">
                    // Registers a callback which filters every message you received from the server.
                    $api.on("receive", function(e, data) {
                    // Every message you receive will be automatically capitalized.
                    data.msg = data.msg.toUpperCase();
                    });
                </code>
            </pre>
            
            <h5>Event Names</h5>
            <ul style="list-style-type: none; padding: 0;">
                <li id="topic-api-events-loaded">
                    <code class="signature">loaded</code>
                    Triggered after all page elements have been loaded. Page elements include the user list,
                    chat buffer, and video player.
                </li>
                <li id="topic-api-events-reloaded">
                    <code class="signature">reloading</code>
                    Triggered after the user scripts have been updated, and are about to be torn down and
                    reinserted into the page.
                </li>
                <li id="topic-api-events-receive">
                    <code class="signature">receive</code>
                    Triggered when a chat message is received from the server.
                </li>
                <li id="topic-api-events-send">
                    <code class="signature">send</code>
                    Triggered before sending your messages to the server.
                </li>
                <li id="topic-api-events-notice">
                    <code class="signature">notice</code>
                    Triggered when a notice is received from the server.
                </li>
                <li id="topic-api-events-user-join">
                    <code class="signature">user_join</code>
                    Triggered when a user joins the channel.
                </li>
                <li id="topic-api-events-user-leave">
                    <code class="signature">user_leave</code>
                    Triggered when a user leaves the channel.
                </li>
                <li id="topic-api-events-playlist">
                    <code class="signature">playlist</code>
                    Triggered when the channel receives the list of videos in the playlist.
                </li>
                <li id="topic-api-events-queue">
                    <code class="signature">queue</code>
                    Triggered before a video gets added to the playlist.
                </li>
                <li id="topic-api-events-media-change">
                    <code class="signature">media_change</code>
                    Triggered before the next song in the playlist begins to play.
                </li>
                <li id="topic-api-events-media-update">
                    <code class="signature">media_update</code>
                    Triggered when the time information for the currently playing video updates.
                </li>
                <li id="topic-api-events-favorites">
                    <code class="signature">favorites</code>
                    Triggered when you receive your list of favorited videos.
                </li>
                <li id="topic-api-events-favorite-add">
                    <code class="signature">favorite_add</code>
                    Triggered when you have favorited a video.
                </li>
                <li id="topic-api-events-tags">
                    <code>tags</code>
                    Triggered when you receive your list of tags.
                </li>
                <li id="topic-api-events-votes">
                    <code class="signature">votes</code>
                    Triggered when the votes for the currently playing video have changed.
                </li>
                <li id="topic-api-events-vote-value">
                    <code class="signature">vote_value</code>
                    Triggered when your vote value changes. Receives a -1, 1, or 0, indicating whether
                    you down voted, up voted, or remain neutral on the vote.
                </li>
                <li id="topic-api-events-emotes">
                    <code class="signature">emotes</code>
                    Triggered when you receive your list of personal emotes, and after updating
                    your list of emotes.
                </li>
                <li id="topic-api-events-afk">
                    <code class="signature">afk</code>
                    Triggered when a user goes afk or comes back from afk.
                </li>
                <li id="topic-api-events-profile-menu">
                    <code class="signature">profile_menu</code>
                    Triggered when the popup profile menu is created for each user in the user list.
                </li>
                <li id="topic-api-events-user-options-save">
                    <code class="signature">user_options_save</code>
                    Triggered before the user options are saved.
                </li>
                <li id="topic-api-events-channel-option-save">
                    <code class="signature">channel_option_save</code>
                    Triggered when a channel option is being saved. Only applicable to admins and mods.
                </li>
                <li id="topic-api-events-search-results">
                    <code class="signature">search_results</code>
                    Triggered with the results of a YouTube search.
                </li>
                <li id="topic-api-events-color-change">
                    <code class="signature">color_change</code>
                    Triggered when the text color is changed. Fires when the page initially loads as well.
                </li>
            </ul>

            <h5>Event Object</h5>
            <p>
                Each time a registered callback is invoked, it receives an event object as the first
                parameter. The event contains two methods.
            </p>
            <p>
                <code>Event.stop()</code> Called inside your callback will stop any other callbacks from
                processing the event. For example if you have three callbacks registered with the "receive"
                event, and the first callback calls <code>Event.stop()</code>, the other two registered callbacks
                will not be invoked.
            </p>
            <p>
                <code>Event.cancel()</code> Called inside your callback stops the channel from processing
                the message. For instance, the following code will prevent ALL messages from appearing in the
                chat buffer.
            </p>
            <pre>
                <code class="language-javascript line-numbers">
                    $api.on("receive", function(e, data) {
                        // This causes the channel to completely discard the message, and it won't
                        // be shown in your chat buffer.
                        e.cancel();
                    });
                </code>
            </pre>

            {{ top() }}
        </section>

        <h3 id="topic-api-methods">Methods</h3>
        <section>
            <p>
                The API contains a few methods for interacting with the channel. For instance to send messages,
                queue songs, and vote skip videos.
            </p>
            
            <!-- $api.send() -->
            <code id="topic-api-methods-send" class="signature">$api.send(msg, meta)</code>
            <p>
                Sends a message to everyone else in the chat room. The value of <code>msg</code> must be a string,
                which contains the message. The <code>meta</code> value is an object which may contain a property
                named "color", which sets the color of the text.
            </p>
            <pre>
                <code class="language-javascript line-numbers">
                    // Will send the message "Hey everyone, headzoo has arrived!" or whatever
                    // your username is.
                    $api.send("Hey everyone, I have arrived!");
                    
                    // Same message, but set the text color to green.
                    $api.send("Hey everyone, I have arrived!", { color: "#00FF00" });
                </code>
            </pre>

            <!-- $api.queue() -->
            <code id="topic-api-methods-queue" class="signature">$api.queue(video)</code>
            <p>
                Adds a video to the playlist. The value of the <code>video</code> argument may be one of two things:<br />
                String: A media url, such as the url to a YouTube video.<br />
                Object: A media object. Must contain the properties "uid", "type", and "title".
            </p>
            <pre>
                <code class="language-javascript line-numbers">
                    // Queue a video from a media url.
                    $api.queue("https://www.youtube.com/watch?v=OsCfufAp2tM");
                    
                    // Queue a video using a media object.
                    $api.queue({
                        type: "yt",                   // It's a YouTube video
                        uid: "OsCfufAp2tM",           // The id of the video
                        title: "Grimes - California"  // The title of the video
                    });
                </code>
            </pre>

            <!-- $api.skip() -->
            <code id="topic-api-methods-skip" class="signature">$api.skip()</code>
            <p>
                Vote skips the currently playing video.
            </p>
            <pre>
                <code class="language-javascript line-numbers">
                    $api.skip();
                </code>
            </pre>

            <!-- $api.vote() -->
            <code id="topic-api-methods-vote" class="signature">$api.vote(value)</code>
            <p>
                Votes for the currently playing video. Valid values for the <code>value</code> are 1 to up vote
                the video, or -1 to down vote the video. Calling the method a second time with the same value
                toggles the vote.
            </p>
            <pre>
                <code class="language-javascript line-numbers">
                    // Up vote the video.
                    $api.vote(1);
                    
                    // Take back the up vote by calling again with the same value.
                    $api.vote(1);
                    
                    // Down vote the video.
                    $api.vote(-1);
                    
                    // Take back the down vote by calling again with the same value.
                    $api.vote(-1);
                </code>
            </pre>

            <!-- $api.playlistClear() -->
            <code id="topic-api-methods-playlist-clear" class="signature">$api.playlistClear()</code>
            <p>
                Clears the playlist. Only applicable to chat moderators.
            </p>
            <pre>
                <code class="language-javascript line-numbers">
                    $api.playlistClear();
                </code>
            </pre>

            <!-- $api.playlistShuffle() -->
            <code id="topic-api-methods-playlist-shuffle" class="signature">$api.playlistShuffle()</code>
            <p>
                Shuffles the playlist. Only applicable to chat moderators.
            </p>
            <pre>
                <code class="language-javascript line-numbers">
                    $api.playlistShuffle();
                </code>
            </pre>

            <!-- $api.search() -->
            <code id="topic-api-methods-search" class="signature">$api.search(query, type)</code>
            <p>
                Searches YouTube for videos matching the given <code>query</code> argument. The <code>type</code>
                argument defaults to "yt" and is currently ignored. Used in conjunction with the
                <code>search_results</code> event.
            </p>
            <pre>
                <code class="language-javascript line-numbers">
                    // Register an event which receives the search results.
                    $api.on("search_results", function(e, data) {
                        if (data.results.length > 0) {
                            $api.queue(data.results[0]);
                        }
                    });
                    
                    // Now perform the search.
                    $api.search("Grimes");
                </code>
            </pre>
            
            <!-- $api.clear() -->
            <code id="topic-api-methods-clear" class="signature">$api.clear()</code>
            <p>
                Clears the chat buffer.
            </p>
            <pre>
                <code class="language-javascript line-numbers">
                    $api.clear();
                </code>
            </pre>

            <!-- $api.color() -->
            <code id="topic-api-methods-color" class="signature">$api.clear(hex_code)</code>
            <p>
                Sets the chat text color.
            </p>
            <pre>
                <code class="language-javascript line-numbers">
                    $api.color("#c13b3b");
                </code>
            </pre>

            {{ top() }}
        </section>

        
        <h3 id="topic-examples">Examples</h3>
        <section>
            <h5 id="topic-api-examples-favorites">Queuing Favorites</h5>
            This tiny user script adds one of your favorited videos to the playlist every 30
            minutes.
            
            <pre>
                <code class="language-javascript line-numbers">
                    // The "favorites" event is called when you enter chat. Save the favorites to a local variable.
                    var favorites = [];
                    $api.on("favorites", function(e, data) {
                        favorites = data;
                    });

                    // Called when you add a new favorite. Add it to the list of favorites we're keeping track of.
                    $api.on("favorite_add", function(e, data) {
                        favorites.push(data.media);
                    });

                    // Every 30 minutes, grab one of the favorites at random, and add it to the playlist.
                    setInterval(function() {
                        var item = favorites[Math.floor(Math.random() * favorites.length)];
                        if (item) {
                            $api.queue(item);
                        }
                    }, 1800000); // 30 minutes in milliseconds
                </code>
            </pre>

            {{ top() }}
        </section>
    </div>
{% endblock %}